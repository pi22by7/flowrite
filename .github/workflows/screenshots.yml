name: Generate Screenshots

on:
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  actions: read

env:
  FLUTTER_VERSION: '3.32.6'

jobs:
  screenshots:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Create .env file
      run: |
        cat > .env << EOF
        SUPABASE_URL=${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
        GOOGLE_WEB_CLIENT_ID=${{ secrets.GOOGLE_WEB_CLIENT_ID }}
        GOOGLE_ANDROID_CLIENT_ID=${{ secrets.GOOGLE_ANDROID_CLIENT_ID }}
        GOOGLE_IOS_CLIENT_ID=${{ secrets.GOOGLE_IOS_CLIENT_ID }}
        DEEP_LINK_SCHEME=me.pi22by7.flowrite://login-callback
        EOF
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Analyze code
      run: flutter analyze --no-fatal-infos
    
    - name: Enable Linux desktop
      run: flutter config --enable-linux-desktop
    
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
    
    - name: Build for Linux
      run: flutter build linux --release
    
    - name: Prepare screenshots directory
      run: |
        mkdir -p screenshots
        mkdir -p assets/screenshots
        echo "Screenshots directories prepared"
    
    - name: Verify integration test
      run: |
        if [ -f "integration_test/app_test.dart" ]; then
          echo "Integration test file found"
          head -10 integration_test/app_test.dart
        else
          echo "ERROR: Integration test file not found!"
          exit 1
        fi
    
    - name: Generate screenshots
      run: |
        export DISPLAY=:99
        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
        sleep 3
        echo "Starting screenshot generation..."
        flutter test integration_test/app_test.dart -d linux --verbose
        echo "Screenshot generation completed"
      continue-on-error: true
    
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: screenshots
        path: |
          screenshots/
          assets/screenshots/
          integration_test/screenshots/
        retention-days: 30
        if-no-files-found: warn
    
    - name: Commit screenshots
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add assets/screenshots/
        if ! git diff --staged --quiet; then
          echo "Screenshots updated, committing changes..."
          git commit -m "Update screenshots [skip ci]"
          git push
        else
          echo "No screenshot changes to commit"
        fi
